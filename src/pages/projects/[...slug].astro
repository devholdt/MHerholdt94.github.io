---
import { type CollectionEntry, getCollection } from "astro:content";

import BaseLayout from "../../layouts/BaseLayout.astro";
import Hero from "../../components/Hero.astro";
import Icon from "../../components/Icon.astro";
import ThemeToggle from "../../components/ThemeToggle.astro";

interface Props {
  entry: CollectionEntry<"projects">;
}

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
  <header>
    <div class="wrapper gap-2 pb-10">
      <div class="flex justify-between">
        <a class="back-link" href="/"><Icon icon="arrow-left" />Back</a>
        <div class="theme-toggle">
          <ThemeToggle />
        </div>
      </div>
      <Hero title={entry.data.title}>
        <div class="p-2">
          <p class="description text-lg md:text-md">
            {entry.data.description}
          </p>
        </div>
      </Hero>
    </div>
  </header>
  <main class="wrapper">
    <div class="content flex gap-20">
      <div class="content-text">
        <Content />
      </div>

      <div class="content-img">
        {
          entry.data.img_secondary && (
            <img
              src={entry.data.img_secondary}
              alt={entry.data.img_secondary_alt || ""}
            />
          )
        }
        {
          entry.data.img_main && (
            <img
              src={entry.data.img_main}
              alt={entry.data.img_main_alt || ""}
            />
          )
        }
      </div>
    </div>
  </main>
</BaseLayout>

<style>
  header {
    border-bottom: 1px solid var(--gray-400);
  }

  .description {
    max-width: 54ch;
  }

  .content-img {
    height: 30.125em;
    padding-right: 5em;
  }

  .content-img img {
    box-shadow: var(--shadow-md);
    border: 1px solid var(--gray-600);
    width: 400px;
    height: 400px;
    object-fit: cover;
    object-position: top;
    border-radius: 0.5rem;
  }

  .content-img img:last-of-type {
    position: relative;
    bottom: 20rem;
    left: 5rem;
  }

  .content-text {
    max-width: 60ch;
  }

  .back-link,
  .content :global(a) {
    color: var(--gray-100);
    text-decoration: 1px solid underline transparent;
    text-underline-offset: 0.25em;
    transition: text-decoration-color var(--theme-transition);
  }

  .back-link:hover,
  .back-link:focus,
  .content :global(a:hover),
  .content :global(a:focus) {
    text-decoration-color: currentColor;
  }

  @media (min-width: 768px) {
    .back-link {
      display: block;
      align-self: flex-start;
    }
  }
</style>
