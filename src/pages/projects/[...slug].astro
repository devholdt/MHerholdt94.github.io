---
import { type CollectionEntry, getCollection } from "astro:content";

import BaseLayout from "../../layouts/BaseLayout.astro";
import Hero from "../../components/Hero.astro";
import Icon from "../../components/Icon.astro";
import ThemeToggle from "../../components/ThemeToggle.astro";

interface Props {
  entry: CollectionEntry<"projects">;
}

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
const linkStyles =
  "max-w-32 w-full h-10 rounded-sm text-center flex items-center justify-center bg-primary-regular text-gray-500";
const imageStyles =
  "rounded-lg shadow-lg max-h-400 h-full w-full object-cover object-top md:w-380";
---

<BaseLayout
  title={`Mathias B. Herholdt | ${entry.data.title}`}
  description={entry.data.description}
>
  <header
    class="container mx-auto gap-2 border-b border-primary-regular px-4 pb-10 dark:border-primary-lighter"
  >
    <div class="flex justify-between">
      <a
        class="back-link p-2 text-gray-100 underline decoration-transparent underline-offset-4 duration-200 ease-in-out hover:decoration-current dark:text-primary-lightest"
        href="/"><Icon icon="arrow-left" />Back</a
      >
      <div class="theme-toggle">
        <ThemeToggle />
      </div>
    </div>
    <Hero title={entry.data.title} tagline={entry.data.tagline}>
      <p
        class="description md:text-md max-w-prose text-lg text-gray-100 dark:text-gray-500"
      >
        {entry.data.description}
      </p>
    </Hero>
  </header>
  <div class="container mx-auto px-4">
    <div class="content flex flex-wrap gap-20 text-gray-100 dark:text-gray-500">
      <div class="max-w-prose">
        <Content />
        <div class="mt-8 flex gap-4">
          <a href={entry.data.url_repo} target="_blank" class={linkStyles}
            >Repo</a
          >
          <a href={entry.data.url_live} target="_blank" class={linkStyles}
            >Live</a
          >
        </div>
      </div>

      <div class="flex w-full flex-col gap-6 md:w-max md:flex-row">
        <div>
          {
            entry.data.img_main && (
              <img
                class={imageStyles}
                src={entry.data.img_main}
                alt={entry.data.img_main_alt}
              />
            )
          }
        </div>
        <div>
          {
            entry.data.img_secondary && (
              <img
                class={imageStyles}
                src={entry.data.img_secondary}
                alt={entry.data.img_secondary_alt}
              />
            )
          }
        </div>
      </div>
    </div>
  </div>

  <div class="flex gap-6"></div>
</BaseLayout>
