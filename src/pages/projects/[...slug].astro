---
import { type CollectionEntry, getCollection } from "astro:content";

import BaseLayout from "../../layouts/BaseLayout.astro";
import Hero from "../../components/Hero.astro";
import Icon from "../../components/Icon.astro";
import ThemeToggle from "../../components/ThemeToggle.astro";

interface Props {
  entry: CollectionEntry<"projects">;
}

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
  <div class="stack gap-20">
    <div class="stack gap-15">
      <header>
        <div class="wrapper stack gap-2 pb-10">
          <div class="flex justify-between">
            <a class="back-link" href="/"><Icon icon="arrow-left" />Back</a>
            <div class="theme-toggle">
              <ThemeToggle />
            </div>
          </div>
          <Hero title={entry.data.title}>
            <div class="p-2">
              <p class="description text-lg md:text-md">
                {entry.data.description}
              </p>
            </div>
          </Hero>
        </div>
      </header>
      <main class="wrapper">
        <div class="stack gap-10 content">
          {
            entry.data.img && (
              <img src={entry.data.img} alt={entry.data.img_alt || ""} />
            )
          }
          <div class="content">
            <Content />
          </div>
        </div>
      </main>
    </div>
  </div>
</BaseLayout>

<style>
  header {
    border-bottom: 1px solid var(--gray-400);
  }

  .description {
    /* font-size: var(--text-lg); */
    max-width: 54ch;
  }

  .content {
    max-width: 65ch;
    margin-inline: auto;
  }

  .content > :global(* + *) {
    margin-top: 1rem;
  }

  .content :global(h1),
  .content :global(h2),
  .content :global(h3),
  .content :global(h4),
  .content :global(h5) {
    margin: 1.5rem 0;
  }

  .content :global(img) {
    /* border-radius: 0.3rem; */
    box-shadow: var(--shadow-sm);
    background: var(--gradient-subtle);
    border: 1px solid var(--gray-200);
  }

  .content :global(blockquote) {
    font-size: var(--text-lg);
    font-family: var(--font-brand);
    font-weight: 600;
    line-height: 1.1;
    padding-inline-start: 1.5rem;
    border-inline-start: 0.25rem solid var(--accent-dark);
    color: var(--gray-0);
  }

  .back-link,
  .content :global(a) {
    text-decoration: 1px solid underline transparent;
    text-underline-offset: 0.25em;
    transition: text-decoration-color var(--theme-transition);
  }

  .back-link:hover,
  .back-link:focus,
  .content :global(a:hover),
  .content :global(a:focus) {
    text-decoration-color: currentColor;
  }

  @media (min-width: 768px) {
    .back-link {
      display: block;
      align-self: flex-start;
    }

    .content :global(blockquote) {
      font-size: var(--text-2xl);
    }
  }
</style>
